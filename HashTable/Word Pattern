Given a pattern and a string s, find if s follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in s.

 

Example 1:

Input: pattern = "abba", s = "dog cat cat dog"
Output: true
Example 2:

Input: pattern = "abba", s = "dog cat cat fish"
Output: false
Example 3:

Input: pattern = "aaaa", s = "dog cat cat dog"
Output: false



class Solution {
    public boolean wordPattern(String pattern, String s) {
        String [] words = s.split(" ");
        char [] p=pattern.toCharArray();
        
        if(words.length != pattern.length())
        {
            return false;
        }
        HashMap <String , Character> map = new HashMap();
        HashSet <Character> cha=new HashSet();
        int i=0;
        for(String word:words)
        {
            if(!map.containsKey(word))
            {
                if(cha.contains(p[i]))
                {
                    return false;
                }
                cha.add(p[i]);
                map.put(word, p[i]);
            }
            if(map.get(word)!= p[i])
            {
                return false;
            }
            i++;
        }
        return true;
    }
}

Time Complexity -O(n)
Space Complexity O(n)
